services:
  # === INFRASTRUCTURE ===
  broker:
    image: apache/kafka:latest
    container_name: broker
    hostname: broker
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk

  kafdrop:
    image: obsidiandynamics/kafdrop:3.30.0
    platform: linux/amd64
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: broker:29092
    depends_on:
      - broker

  # === POSTGRES DATABASES ===
  postgres-order:
    image: postgres:16
    container_name: postgres-order
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fd_order_service_db
    ports:
      - "5434:5432"

  postgres-restaurant:
    image: postgres:16
    container_name: postgres-restaurant
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fd_restaurant_service_db
    ports:
      - "5435:5432"

  postgres-delivery:
    image: postgres:16
    container_name: postgres-delivery
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fd_delivery_service_db
    ports:
      - "5436:5432"

  postgres-payment:
    image: postgres:16
    container_name: postgres-payment
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fd_payment_service_db
    ports:
      - "5437:5432"

  # === MICROSERVICES ===
  order-service:
    build: ./order-service
    container_name: order-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres-order
      - broker
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-order:5432/fd_order_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: broker:29092

  restaurant-service:
    build: ./restaurant-service
    container_name: restaurant-service
    ports:
      - "8082:8082"
    depends_on:
      - postgres-restaurant
      - broker
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-restaurant:5432/fd_restaurant_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: broker:29092

  delivery-service:
    build: ./delivery-service
    container_name: delivery-service
    ports:
      - "8083:8083"
    depends_on:
      - postgres-delivery
      - broker
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-delivery:5432/fd_delivery_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: broker:29092

  payment-service:
    build: ./payment-service
    container_name: payment-service
    ports:
      - "8084:8084"
    depends_on:
      - postgres-payment
      - broker
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-payment:5432/fd_payment_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: broker:29092

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "8085:8085"
    depends_on:
      - broker
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: broker:29092

  # === LOG VIEWER (GUI) ===
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    ports:
      - "9999:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - order-service
      - restaurant-service
      - delivery-service
      - payment-service
      - notification-service